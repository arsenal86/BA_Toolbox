# Redirect all routes to index.html for React SPA support
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
# netlify.toml

[build]
  # The base directory where the build command is run
  base = "."

  # Command to build the React frontend
  command = "cd frontend && npm install && npm run build"

  # Directory that contains the deploy-ready HTML files
  publish = "frontend/build"

  # Directory that contains Netlify Functions
  functions = "netlify/functions"

[dev]
  # Command to start your local development server for the frontend
  # This helps `netlify dev` know how to serve your frontend
  command = "cd frontend && npm start"
  port = 3000
  functionsPort = 34567
  publish = "frontend/build"
  # Framework detection can often set this, but good to be explicit
  # For create-react-app, the dev server runs on port 3000 typically
  # targetPort = 3000 # No, this is for proxying. Port is for the static server.

[[redirects]]
  # Optional: Redirect for client-side routing if your React app uses it.
  # For a single-page app (SPA) where routing is handled by React Router,
  # this ensures that direct navigation to routes like /some-page
  # still serves the index.html.
  # from = "/*"
  # to = "/index.html"
  # status = 200
  # This might not be strictly necessary for the current single-view app
  # but is good practice for SPAs.

  # If you want to make the function endpoint look cleaner, like /api/*
  # from = "/api/*"
  # to = "/.netlify/functions/:splat"
  # status = 200
  # For now, we'll use the default /.netlify/functions/analyze-story path.

# Optional: Specify Node.js version for functions, if needed
# [functions]
#   node_bundler = "esbuild" # Using esbuild is generally faster
#   [functions.node_version]
#     # You can specify a Node.js version like "18" or "20"
#     # It's good to align with the version you develop with.
#     # If not specified, Netlify uses a default version.
#     # For now, let Netlify use its default.
#     # node_version = "18"

# Note: `cd frontend && npm install` is added to the build command
# to ensure dependencies are installed in the CI environment before building.
